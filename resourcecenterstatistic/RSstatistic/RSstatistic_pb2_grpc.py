# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import RSstatistic_pb2 as RSstatistic__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class RSstatisticServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getResourceUseCount = channel.unary_unary(
        '/resourcecenterstatistic.RSstatisticService/getResourceUseCount',
        request_serializer=RSstatistic__pb2.ReqResourceUseCount.SerializeToString,
        response_deserializer=RSstatistic__pb2.RespResourceUseCount.FromString,
        )
    self.increaseResourceUseCount = channel.unary_unary(
        '/resourcecenterstatistic.RSstatisticService/increaseResourceUseCount',
        request_serializer=RSstatistic__pb2.ReqIncreaseResourceUseCount.SerializeToString,
        response_deserializer=RSstatistic__pb2.EmptyResp.FromString,
        )
    self.getQuestionTotalCount = channel.unary_unary(
        '/resourcecenterstatistic.RSstatisticService/getQuestionTotalCount',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=RSstatistic__pb2.RespQuestionTotalCount.FromString,
        )
    self.listInsertQuestionDetail = channel.unary_unary(
        '/resourcecenterstatistic.RSstatisticService/listInsertQuestionDetail',
        request_serializer=RSstatistic__pb2.RequestInsertQuestionDetailList.SerializeToString,
        response_deserializer=RSstatistic__pb2.ResponseInsertQuestionDetailList.FromString,
        )


class RSstatisticServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getResourceUseCount(self, request, context):
    """获取资源使用次数
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def increaseResourceUseCount(self, request, context):
    """增加资源使用记录
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getQuestionTotalCount(self, request, context):
    """试题总量统计
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listInsertQuestionDetail(self, request, context):
    """新增试题明细
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RSstatisticServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getResourceUseCount': grpc.unary_unary_rpc_method_handler(
          servicer.getResourceUseCount,
          request_deserializer=RSstatistic__pb2.ReqResourceUseCount.FromString,
          response_serializer=RSstatistic__pb2.RespResourceUseCount.SerializeToString,
      ),
      'increaseResourceUseCount': grpc.unary_unary_rpc_method_handler(
          servicer.increaseResourceUseCount,
          request_deserializer=RSstatistic__pb2.ReqIncreaseResourceUseCount.FromString,
          response_serializer=RSstatistic__pb2.EmptyResp.SerializeToString,
      ),
      'getQuestionTotalCount': grpc.unary_unary_rpc_method_handler(
          servicer.getQuestionTotalCount,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=RSstatistic__pb2.RespQuestionTotalCount.SerializeToString,
      ),
      'listInsertQuestionDetail': grpc.unary_unary_rpc_method_handler(
          servicer.listInsertQuestionDetail,
          request_deserializer=RSstatistic__pb2.RequestInsertQuestionDetailList.FromString,
          response_serializer=RSstatistic__pb2.ResponseInsertQuestionDetailList.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'resourcecenterstatistic.RSstatisticService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
