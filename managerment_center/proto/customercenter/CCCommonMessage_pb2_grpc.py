# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import CCCommonMessage_pb2 as CCCommonMessage__pb2


class CommonServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.listProvince = channel.unary_unary(
        '/customercenter.CommonService/listProvince',
        request_serializer=CCCommonMessage__pb2.RequestListProvince.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.AddressList.FromString,
        )
    self.listCity = channel.unary_unary(
        '/customercenter.CommonService/listCity',
        request_serializer=CCCommonMessage__pb2.RequestListCity.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.AddressList.FromString,
        )
    self.listDistrict = channel.unary_unary(
        '/customercenter.CommonService/listDistrict',
        request_serializer=CCCommonMessage__pb2.RequestListDistrict.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.AddressList.FromString,
        )


class CommonServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def listProvince(self, request, context):
    """根据条件返回客户信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listCity(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listDistrict(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CommonServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'listProvince': grpc.unary_unary_rpc_method_handler(
          servicer.listProvince,
          request_deserializer=CCCommonMessage__pb2.RequestListProvince.FromString,
          response_serializer=CCCommonMessage__pb2.AddressList.SerializeToString,
      ),
      'listCity': grpc.unary_unary_rpc_method_handler(
          servicer.listCity,
          request_deserializer=CCCommonMessage__pb2.RequestListCity.FromString,
          response_serializer=CCCommonMessage__pb2.AddressList.SerializeToString,
      ),
      'listDistrict': grpc.unary_unary_rpc_method_handler(
          servicer.listDistrict,
          request_deserializer=CCCommonMessage__pb2.RequestListDistrict.FromString,
          response_serializer=CCCommonMessage__pb2.AddressList.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'customercenter.CommonService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
